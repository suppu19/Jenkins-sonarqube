node {
    stage('test') {
        echo 'Knowledge Is Free'
    }
        echo "=======================================Checking Out Code from Github======================================="
       
        stage('Git Checkout') {
       
        git branch: 'main', credentialsId: 'Github', url: 'https://github.com/suppu19/Jenkins-sonarqube.git'
       
        echo "=======================================Pulled Code from Github======================================="   
    }
   
    echo "=========================================Building Maven Project=========================================="
   
    stage('Maven Build') {
       
            sh "mvn clean package"
            
    }    
    stage("Archiving Artifact") {        
       
    echo "==========================================Built Maven Project============================================"
   
    echo "=========================================Archiving Artifact============================================="


        archiveArtifacts artifacts: '**/*.war'
   
    echo "==========================================Artifact Archieved============================================="
       
    }

stage('Deployment') {
sshagent(['tomcat-server']) {
sh "scp -o StrictHostKeyChecking=no $WORKSPACE/target/maven-web-application.war ubuntu@65.0.168.145:/opt/tomcat/webapps"
      }
      
}
      
stage('Nexus') {
    
    nexusArtifactUploader artifacts: [
    [
        artifactId: 'maven-web-application',
        classifier: '', 
        file: 'target/maven-web-application.war',
        type: 'war'
    ]
], 
    credentialsId: 'nexus3',
    groupId: 'com.mt',
    nexusUrl: '172.31.11.244:8081',
    nexusVersion: 'nexus3',
    protocol: 'http',
    repository: 'nexus-artifact',
    version: '5.0.0'
    
}
stage ("sonarqube"){
withSonarQubeEnv(credentialsId: 'sonar') {
    sh "mvn sonar:sonar"
}
    
   }
}
